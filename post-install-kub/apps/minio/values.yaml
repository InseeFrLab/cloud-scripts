minio:
  mode: distributed
  drivesPerNode: 2
  replicas: 3

  existingSecret: "minio"

  image:
    repository: minio/minio
    tag: RELEASE.2021-02-14T04-01-33Z
    pullPolicy: IfNotPresent

  tls:
    enabled: true
    ## Create a secret with private.key and public.crt files and pass that here. Ref: https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret
    certSecret: "minio-tls"
    publicCrt: tls.crt
    privateKey: tls.key

  environment:
    MINIO_IAM_OPA_URL: "https://opa.example.com/v1/data/httpapi/authz" # to turn-off browser
    MINIO_IDENTITY_OPENID_CONFIG_URL: "https://auth.example.com/auth/realms/example/.well-known/openid-configuration"
    MINIO_IDENTITY_OPENID_CLIENT_ID: "minio"
    MINIO_DOMAIN: "minio.example.com"

  persistence:
    enabled: true

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    ## minio data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    ## Storage class of PV to bind. By default it looks for standard storage class.
    ## If the PV uses a different storage class, specify that here.
    storageClass: "minio-disks"
    VolumeName: ""
    accessMode: ReadWriteOnce
    size: 3519Gi

    ## If subPath is set mount a sub folder of a volume instead of the root of the volume.
    ## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).
    ##
    subPath: ""

  ingress:
    enabled: true
    labels:
      {}
      # node-role.kubernetes.io/ingress: platform

    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      # nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
    path: /
    hosts:
      - minio.example.com
      - "*.minio.example.com"
    tls:
      - hosts:
          - minio.example.com
          - "*.minio.example.com"
